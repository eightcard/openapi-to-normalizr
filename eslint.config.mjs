import globals from 'globals';
import tsParser from '@typescript-eslint/parser';
import path from 'node:path';
import { fileURLToPath } from 'node:url';
import js from '@eslint/js';
import { FlatCompat } from '@eslint/eslintrc';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const compat = new FlatCompat({
  baseDirectory: __dirname,
  recommendedConfig: js.configs.recommended,
  allConfig: js.configs.all,
});

export default [
  {
    ignores: [
      'dist/**/*',
      'node_modules/**/*',
      'example/config/config.schemas.js',
      'example/dist',
      'example/src/autoGen/**/*',
      'example/src/vite-env.d.ts',
      '**/jest.config.js',
    ],
  },
  ...compat.extends(
    /* ESLintの推奨ルール */
    'eslint:recommended',
    /* Prettierのルールと競合するものを無効化 */
    'plugin:prettier/recommended',
  ),
  {
    languageOptions: {
      globals: {
        ...globals.browser,
        ...globals.node,
        jest: true,
        describe: true,
        it: true,
        beforeEach: true,
        afterEach: true,
        test: true,
        expect: true,
      },
      ecmaVersion: 2019,
      sourceType: 'module',
    },
    rules: {
      'accessor-pairs': 'error',
      'array-bracket-newline': 'error',
      'array-bracket-spacing': ['error', 'never'],
      'array-callback-return': 'error',
      'array-element-newline': 'off',
      'arrow-body-style': 'off',
      'arrow-parens': 'off',
      'arrow-spacing': ['error', { after: true, before: true }],
      'block-scoped-var': 'error',
      'block-spacing': ['error', 'always'],
      'brace-style': ['error', '1tbs', { allowSingleLine: true }],
      'callback-return': 'error',
      camelcase: 'error',
      'capitalized-comments': 'off',
      'class-methods-use-this': 'off',
      'comma-dangle': 'off',
      'comma-spacing': ['error', { after: true, before: false }],
      'comma-style': ['error', 'last'],
      complexity: 'error',
      'computed-property-spacing': ['error', 'never'],
      'consistent-return': 'off',
      'consistent-this': 'error',
      curly: 'off',
      'default-case': 'error',
      'dot-location': 'off',
      'dot-notation': 'off',
      'eol-last': 'error',
      eqeqeq: 'error',
      'for-direction': 'error',
      'func-call-spacing': 'error',
      'func-name-matching': 'error',
      'func-names': 'error',
      'func-style': ['error', 'declaration', { allowArrowFunctions: true }],
      'generator-star-spacing': 'error',
      'getter-return': 'error',
      'global-require': 'error',
      'guard-for-in': 'error',
      'handle-callback-err': 'error',
      'id-blacklist': 'error',
      'id-length': 'off',
      'id-match': 'error',
      indent: 'off',
      'indent-legacy': 'off',
      'init-declarations': 'off',
      'jsx-quotes': 'error',
      'key-spacing': 'error',
      'keyword-spacing': 'error',
      'line-comment-position': 'off',
      'linebreak-style': ['error', 'unix'],
      'lines-around-comment': [
        'error',
        {
          beforeBlockComment: true,
          afterBlockComment: false,
          beforeLineComment: true,
          afterLineComment: false,
          allowBlockStart: true,
          allowBlockEnd: true,
          allowObjectStart: true,
          allowObjectEnd: true,
          allowArrayStart: true,
          allowArrayEnd: true,
        },
      ],
      'lines-around-directive': 'error',
      'lines-between-class-members': ['error', 'always'],
      'max-depth': 'error',
      'max-len': 'off',
      'max-lines': 'warn',
      'max-nested-callbacks': 'error',
      'max-params': 'error',
      'max-statements': 'off',
      'max-statements-per-line': 'off',
      'multiline-comment-style': 'off',
      'new-parens': 'error',
      'newline-after-var': 'off',
      'newline-before-return': 'off',
      'newline-per-chained-call': 'off',
      'no-alert': 'error',
      'no-array-constructor': 'error',
      'no-await-in-loop': 'error',
      'no-bitwise': 'error',
      'no-buffer-constructor': 'error',
      'no-caller': 'error',
      'no-catch-shadow': 'error',
      'no-confusing-arrow': 'off',
      'no-continue': 'error',
      'no-div-regex': 'error',
      'no-duplicate-imports': 'error',
      'no-else-return': 'off',
      'no-empty-function': 'error',
      'no-eq-null': 'error',
      'no-eval': 'error',
      'no-extend-native': 'error',
      'no-extra-bind': 'error',
      'no-extra-label': 'error',
      'no-floating-decimal': 'error',
      'no-implicit-coercion': 'error',
      'no-implicit-globals': 'error',
      'no-implied-eval': 'error',
      'no-inline-comments': 'off',
      'no-invalid-this': 'off',
      'no-iterator': 'error',
      'no-label-var': 'error',
      'no-labels': 'error',
      'no-lone-blocks': 'error',
      'no-lonely-if': 'error',
      'no-loop-func': 'error',
      'no-magic-numbers': 'off',
      'no-mixed-operators': 'error',
      'no-mixed-requires': 'error',
      'no-multi-assign': 'error',
      'no-multi-spaces': ['error', { ignoreEOLComments: true }],
      'no-multi-str': 'error',
      'no-multiple-empty-lines': 'error',
      'no-native-reassign': 'error',
      'no-negated-condition': 'error',
      'no-negated-in-lhs': 'error',
      'no-nested-ternary': 'error',
      'no-new': 'error',
      'no-new-func': 'error',
      'no-new-object': 'error',
      'no-new-require': 'error',
      'no-new-wrappers': 'error',
      'no-octal-escape': 'error',
      'no-param-reassign': 'off',
      'no-path-concat': 'error',
      'no-plusplus': 'off',
      'no-process-env': 'error',
      'no-process-exit': 'error',
      'no-proto': 'error',
      'no-prototype-builtins': 'error',
      'no-restricted-globals': 'error',
      'no-restricted-imports': 'error',
      'no-restricted-modules': 'error',
      'no-restricted-properties': 'error',
      'no-restricted-syntax': 'error',
      'no-return-assign': 'error',
      'no-return-await': 'error',
      'no-script-url': 'error',
      'no-self-compare': 'error',
      'no-sequences': 'error',
      'no-shadow': 'off',
      'no-shadow-restricted-names': 'error',
      'no-spaced-func': 'error',
      'no-sync': 'off',
      'no-tabs': 'error',
      'no-template-curly-in-string': 'error',
      'no-ternary': 'off',
      'no-throw-literal': 'error',
      'no-trailing-spaces': 'error',
      'no-undef-init': 'error',
      'no-undefined': 'warn',
      'no-unmodified-loop-condition': 'error',
      'no-unneeded-ternary': 'error',
      'no-unused-expressions': 'error',
      'no-use-before-define': 'off',
      'no-useless-call': 'error',
      'no-useless-computed-key': 'error',
      'no-useless-concat': 'error',
      'no-useless-constructor': 'error',
      'no-useless-rename': 'error',
      'no-useless-return': 'error',
      'no-var': 'error',
      'no-void': 'error',
      'no-warning-comments': 'error',
      'no-whitespace-before-property': 'error',
      'no-with': 'error',
      'nonblock-statement-body-position': 'error',
      'object-curly-newline': 'off',
      'object-curly-spacing': 'off',
      'object-property-newline': 'off',
      'object-shorthand': 'error',
      'one-var': 'off',
      'one-var-declaration-per-line': 'error',
      'operator-assignment': 'error',
      'operator-linebreak': 'error',
      'padded-blocks': 'off',
      'padding-line-between-statements': 'error',
      'prefer-arrow-callback': 'error',
      'prefer-const': 'error',
      'prefer-destructuring': 'off',
      'prefer-numeric-literals': 'error',
      'prefer-promise-reject-errors': 'off',
      'prefer-reflect': 'off',
      'prefer-rest-params': 'error',
      'prefer-spread': 'error',
      'prefer-template': 'error',
      'quote-props': 'off',
      quotes: ['error', 'single'],
      radix: 'error',
      'require-await': 'error',
      'require-jsdoc': 'off',
      'rest-spread-spacing': 'error',
      semi: 'off',
      'semi-spacing': 'error',
      'semi-style': ['error', 'last'],
      'sort-imports': 'off',
      'sort-keys': 'off',
      'sort-vars': 'error',
      'space-before-blocks': 'error',
      'space-before-function-paren': 'off',
      'space-in-parens': ['error', 'never'],
      'space-infix-ops': 'off',
      'space-unary-ops': 'error',
      'spaced-comment': ['error', 'always'],
      strict: 'error',
      'switch-colon-spacing': 'error',
      'symbol-description': 'error',
      'template-curly-spacing': ['error', 'never'],
      'template-tag-spacing': 'error',
      'unicode-bom': ['error', 'never'],
      'valid-jsdoc': 'off',
      'vars-on-top': 'error',
      'wrap-iife': 'error',
      'wrap-regex': 'error',
      'yield-star-spacing': 'error',
      yoda: ['error', 'never'],
    },
  },
  ...compat
    .extends(
      /* ESLintチームが作ったTS用の推奨ルール */
      'plugin:@typescript-eslint/eslint-recommended',
      /* TS用の推奨ルール */
      'plugin:@typescript-eslint/recommended',
    )
    .map((config) => ({
      ...config,
      files: ['**/*.ts'],
      languageOptions: {
        parser: tsParser,
        ecmaVersion: 2019,
        sourceType: 'module',
      },
      rules: {
        'no-undef': 'off', // TSでカバーできるため不要
        'no-unused-vars': 'off', // TSでカバーできるため不要
        '@typescript-eslint/explicit-module-boundary-types': 'off',
        '@typescript-eslint/no-use-before-define': 'off',
        '@typescript-eslint/no-explicit-any': 'warn',
        '@typescript-eslint/ban-ts-comment': 'warn',
      },
    })),
];
